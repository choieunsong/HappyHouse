{"remainingRequest":"/Users/eunsong/git/happyhouse-qna/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunsong/git/happyhouse-qna/src/components/Comment.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/eunsong/git/happyhouse-qna/src/components/Comment.vue","mtime":1621772631807},{"path":"/Users/eunsong/git/happyhouse-qna/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunsong/git/happyhouse-qna/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eunsong/git/happyhouse-qna/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eunsong/git/happyhouse-qna/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunsong/git/happyhouse-qna/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlcGx5LWhlYWRlcnsKICAgIGZvbnQtc2l6ZTogMTVweDsKfQoKLmJ0bi1yZXBseXsKICAgIG1hcmdpbjogMTBweDsKfQo="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;;AAEA;AACA;AACA","file":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <li class=\"list-group-item\">\n        <div v-if=\"!updated\">\n            <div style=\"margin-bottom: 10px;\">\n                <span class=\"reply-header\">{{reply.writer}}</span>\n                (<span class=\"reply-header\">{{reply.writetime | toDate}}</span>)\n            </div>\n            <div class=\"row\">\n                <div class=\"col-10\">\n                    <h5 class=\"card-text\">{{reply.content}}</h5>\n                </div>\n                <div class=\"text-right\" v-if=\"getUsername == reply.writer\">\n                    <div class=\"row\">\n                        <button class=\"btn btn-primary btn-reply\" @click=\"toggleComment()\">수정</button>\n                        <button class=\"btn btn-primary btn-reply\" @click=\"deleteComment(bno)\">삭제</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div v-else>\n            <div>\n            <div class=\"form-group row\">                \n                <label for=\"writer\" class=\"col-sm-2 col-form-label\">작성자 : </label>\n                <div class=\"col-sm-10\">\n                    <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"writer\" v-model=\"getUsername\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <textarea class=\"form-control\" id=\"content\" v-model=\"reply.content\" ref=\"content\" style=\"min-width: 100%\"></textarea>\n            </div>\n            <div class=\"text-right\">\n                <div class=\"row\">\n                <button class =\"btn btn-primary btn-reply\" @click=\"updateComment(bno)\">등록</button>\n                <button class  =\"btn btn-primary btn-reply\" @click=\"toggleComment()\">취소</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </li>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from 'axios';\nimport {bus} from '@/boardbus'\nexport default {\n    name: 'Comment',\n    props: ['reply', 'bno'],\n    data(){\n        return{\n            updated: false,\n        }\n    },\n    computed: {\n        getUsername(){\n            return this.$store.state.username;\n        }\n    },\n    methods:{\n        updateComment(bno){\n            console.log(bno);\n            axios\n            .put(`http://localhost:9090/happyhouse/qna/board/reply`,{\n                bno: bno,\n                no: this.reply.no,\n                write: this.reply.write,\n                content: this.reply.content\n            })\n            .then(({data}) => {\n                if(data == \"success\"){\n                    console.log(data);\n                    \n                    this.updated = false;\n                    \n                    setTimeout(()=>{ \n                        bus.$emit('searchBoard', bno)\n                    }, 100);\n                } else{\n                    alert(\"오류발생\");\n                }\n            })\n            .catch(() => {\n                alert(\"오류 발생\");\n            });\n        },\n        toggleComment(){\n            if(this.updated){\n                this.updated  = false;\n            }else{\n                this.updated = true;\n            }\n        },\n        deleteComment(bno){\n            console.log(bno);\n            axios\n            .delete(`http://localhost:9090/happyhouse/qna/board/reply/${this.reply.no}`)\n            .then(({data}) => {\n                if(data ==\"success\"){\n                    console.log(data);\n                    console.log(bno);\n                    \n                    setTimeout(()=>{\n                        bus.$emit('searchBoard', bno);\n                    }, 100);\n                } else {\n                    alert(\"오류 발생\");\n                }\n                \n            })\n            .catch(()=>{\n                alert(\"오류 발생\");\n            })\n        },\n    },\n    filters: {\n        toDate: function (regtime) {\n            return moment(new Date(regtime)).format(\"YYYY.MM.DD.HH:mm\");\n        }\n    },\n}\n</script>\n\n<style>\n.reply-header{\n    font-size: 15px;\n}\n\n.btn-reply{\n    margin: 10px;\n}\n</style>"]}]}