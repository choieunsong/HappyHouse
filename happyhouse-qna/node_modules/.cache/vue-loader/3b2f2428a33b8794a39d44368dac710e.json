{"remainingRequest":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/src/components/Search.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/src/components/Search.vue","mtime":1621686714489},{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunsong/Documents/SSAFY/WorkSpace/vuejs/Workshop/happyhouse-cli/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wYW5lbC1kZWZhdWx0IHsgDQogICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgICAgDQp9DQoNCi5zZWNvbmQgew0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICBmb250LXNpemU6IDE1cHg7DQogIGJvcmRlci1ib3R0b206IDJweCBkYXNoZWQgI0RDRENEQzsNCn0NCg0KLmxpbmstZGFya3sNCiAgZm9udC1zaXplOiAyMHB4Ow0KICBjb2xvcjogIzMyQ0QzMjsNCn0NCg0KLmJ0bi1ncm91cHsNCiAgbWFyZ2luOiAxMHB4Ow0KICBwYWRkaW5nOiA1cHggMzBweDsNCn0NCg0KLmZvcm0tY29udHJvbHsNCiAgYm9yZGVyOiAxIGRhcmtncmF5Ow0KfQ0KDQouZm9ybS1jb250cm9sLXBsYWludGV4dHsNCiAgY29sb3I6IGRhcmtncmF5Ow0KfQ0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div style=\"margin: 40px 0 40px;\">\r\n\r\n    <h2 class=\"text-center\" style=\"margin-bottom: 30px;\">게시글 내용</h2>\r\n\r\n    <div class=\"shadow p-3 mb-5 bg-white rounded\">\r\n      <div >\r\n        <table class=\"table table-borderless\" align=\"center\" v-if=\"board\">\r\n          \r\n            <tr class=\"second\">\r\n              <th colspan=\"1\" width=\"100\">제목</th>\r\n              <th colspan=\"3\">{{board.title}}</th>\r\n            </tr>\r\n\r\n            <tr class=\"second\">\r\n              <th>작성자</th>\r\n              <td width=\"80\" align=\"center\">{{board.writer}}</td>\r\n              <th width=\"70\">등록일</th>\r\n              <td width=\"120\" align=\"center\"><span>{{board.regtime | toDate}}</span></td>\r\n            </tr>\r\n            <tr>\r\n                <td height=\"200\" colspan=\"4\">{{board.content}}</td>\r\n              </tr>\r\n        </table>\r\n      </div>\r\n      <div class=\"text-center\" v-if=\"getUsername == board.writer\">\r\n        <button class=\"btn btn-primary btn-group\" @click=\"updateBoard()\">수정</button>\r\n        <button class=\"btn btn-primary btn-group\" @click=\"removeBoard()\">삭제</button>\r\n      </div>\r\n  </div>\r\n\r\n    <div style=\"margin-top: 40px;\">\r\n        <ul class=\" shadow p-3 mb-5 bg-white rounded\">\r\n            <li class=\"list-group-item\"> \r\n              <fieldset class=\"fieldset-border\">\r\n                  <legend class=\"fieldset-border\">댓글 등록하기</legend>\r\n                  <div>\r\n                      <div class=\"form-group row\">\r\n                          <label for=\"writer\" class=\"col-sm-2 col-form-label\">작성자 </label>\r\n                          <div class=\"col-sm-10\">\r\n                              <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"writer\" v-model=\"username\">\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                          <textarea class=\"form-control\" id=\"content\" v-model=\"content\" ref=\"content\" style=\"min-width: 100%\" rows=\"4\" @keypress.enter=\"insertComment()\"></textarea>\r\n                      </div>\r\n                      <button class=\"btn btn-primary\" @click=\"insertComment()\">등록하기</button>\r\n                  </div>\r\n              </fieldset>\r\n          </li> \r\n          <comment v-for=\"(reply, index) in replies\" :reply=\"reply\" :key=\"index\" :bno=\"board.no\"></comment>\r\n        </ul>\r\n    </div>\r\n\r\n  </div> \r\n  \r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {bus} from '@/boardbus'\r\nimport Comment from '@/components/Comment.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Comment,\r\n  },\r\n  data() {\r\n    return { \r\n      board: {},\r\n      replies: [],\r\n      content: '',\r\n      username: 'ssafy',\r\n    };\r\n  },\r\n  computed: {\r\n    getUsername(){\r\n      return this.$store.state.username;\r\n    }\r\n  },\r\n  filters: {\r\n    toDate: function (regtime) {\r\n      return moment(new Date(regtime)).format(\"YYYY.MM.DD\");\r\n    }\r\n  },\r\n  created() {\r\n    bus.$on('searchBoard',this.searchBoard)\r\n  },\r\n  methods:{\r\n    updateBoard(){\r\n      this.$router.push('/update');\r\n      setTimeout(()=>{\r\n        bus.$emit('updateBoard',this.board)\r\n      },100)\r\n    },\r\n    removeBoard(){\r\n      this.$router.push('/remove')\r\n      setTimeout(()=>{\r\n        bus.$emit('removeBaord',this.board.no)\r\n      },100);\r\n    },\r\n    searchBoard(no){\r\n      console.log('searchboard.................',no);\r\n      axios\r\n      .get(`http://localhost:9090/happyhouse/qna/board/${no}`)\r\n      .then(({ data }) => {\r\n\r\n        this.board = data;\r\n        this.replies = data.replies;\r\n        console.log(this.board);\r\n        console.log('===================');\r\n        console.log(this.replies);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        alert(\"게시글 조회 중 오류 발생\");\r\n      });\r\n    },\r\n  insertComment(){\r\n        if(this.content === ''){\r\n            alert(\"댓글을 입력해 주세요\");\r\n            this.$refs.content.focus();\r\n            return;\r\n        }\r\n        console.log(this.content);\r\n        console.log(this.username);\r\n        console.log(this.board.no);\r\n        axios\r\n        .post(`http://localhost:9090/happyhouse/qna/board/reply`,{\r\n            no: 0,\r\n            bno: this.board.no,\r\n            writer: this.username,\r\n            content: this.content\r\n        })\r\n        .then(({data}) => {\r\n            if(data == \"success\"){\r\n              alert(\"댓글 등록 완료.\");\r\n              this.$router.push('/search');\r\n              setTimeout(()=>{\r\n                this.content = '';\r\n                bus.$emit('searchBoard', this.board.no)\r\n              }, 100);\r\n            } else{\r\n                alert(\"등록 실패\");\r\n                \r\n            }\r\n        })\r\n        .catch(() => {\r\n            alert(\"댓글 등록 실패\");\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.panel-default { \r\n    border: 1px solid #ccc;    \r\n}\r\n\r\n.second {\r\n  text-align: left;\r\n  font-size: 15px;\r\n  border-bottom: 2px dashed #DCDCDC;\r\n}\r\n\r\n.link-dark{\r\n  font-size: 20px;\r\n  color: #32CD32;\r\n}\r\n\r\n.btn-group{\r\n  margin: 10px;\r\n  padding: 5px 30px;\r\n}\r\n\r\n.form-control{\r\n  border: 1 darkgray;\r\n}\r\n\r\n.form-control-plaintext{\r\n  color: darkgray;\r\n}\r\n</style>\r\n"]}]}